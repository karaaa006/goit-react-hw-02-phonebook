{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","label","type","pattern","title","required","onChange","btn","Component","ContactList","contacts","handleDel","map","contact","id","onClick","Filter","filter","App","isInclude","alert","prev","concat","shortid","generate","contactFilter","getFilteredContacts","toLowerCase","includes","some","deleteContact","delIdx","findIndex","dataset","contactId","prevCopy","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b448ba0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2vUXF\",\"label\":\"ContactForm_label__a2a8K\",\"btn\":\"ContactForm_btn__3wNWw\"};","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit({ name, number });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport { ContactForm };\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport function ContactList({ contacts, handleDel }) {\r\n  return (\r\n    <div className=\"contacts\">\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className=\"delete\"\r\n              data-contact-id={contact.id}\r\n              onClick={handleDel}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  handleDel: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport function Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport \"./App.css\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleSubmit = ({ name, number }) => {\n    if (this.isInclude(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    this.setState((prev) => {\n      return {\n        contacts: prev.contacts.concat({\n          id: shortid.generate(),\n          name,\n          number,\n        }),\n      };\n    });\n  };\n\n  contactFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  isInclude = (name) => {\n    return this.state.contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  deleteContact = (e) => {\n    const delIdx = this.state.contacts.findIndex((contact) => {\n      return contact.id === e.target.dataset.contactId;\n    });\n\n    this.setState((prev) => {\n      const prevCopy = [...prev.contacts];\n      prevCopy.splice(delIdx, 1);\n\n      return {\n        contacts: prevCopy,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} onChange={this.contactFilter} />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          handleDel={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}